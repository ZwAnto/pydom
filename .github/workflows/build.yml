name: Docker Image CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up QEMU        
      uses: docker/setup-qemu-action@v2
      with:
        platforms: arm64

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Docker Login
      uses: docker/login-action@v2.1.0
      with:
        registry: ${{ secrets.REGISTRY_URL }}
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}

    - name: Build the Docker image
      run: |
        docker buildx build . --platform linux/arm64 -f k8s/Dockerfile -t ${{ secrets.REGISTRY_URL }}/pydom:${GITHUB_SHA::7} --push
        docker buildx build . --platform linux/arm64 -f k8s/Dockerfile -t ${{ secrets.REGISTRY_URL }}/pydom:latest --push

    - name: Replace REGISTRY_URL
      uses: jacobtomlinson/gha-find-replace@v3
      with:
        find: "${REGISTRY_URL}"
        replace: ${{ secrets.REGISTRY_URL }}
        regex: False
        include: 'k8s/deployment.yaml'

    - name: Set outputs
      id: vars
      run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

    - name: Replace DIGEST
      uses: jacobtomlinson/gha-find-replace@v3
      with:
        find: "${DIGEST}"
        replace: "${{ steps.vars.outputs.sha_short }}"
        regex: False
        include: 'k8s/deployment.yaml'

    - name: Replace TYDOM_MAC
      uses: jacobtomlinson/gha-find-replace@v3
      with:
        find: "${TYDOM_MAC}"
        replace: ${{ secrets.TYDOM_MAC }}
        regex: False
        include: 'k8s/secret.yaml'

    - name: Replace TYDOM_PASS
      uses: jacobtomlinson/gha-find-replace@v3
      with:
        find: "${TYDOM_PASS}"
        replace: ${{ secrets.TYDOM_PASS }}
        regex: False
        include: 'k8s/secret.yaml'

    - name: Deploy
      uses: actions-hub/kubectl@master
      env:
        KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
      with:
        args: apply -f k8s/deployment.yaml